<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.atomicoke.logic.modules.friend.domain.dao.mapper.FriendMapper">
    <resultMap id="BaseResultMap" type="org.atomicoke.logic.modules.friend.domain.entity.Friend">
        <!--@Table friend-->
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="ownerId" column="owner_id" jdbcType="BIGINT"/>
        <result property="friendId" column="friend_id" jdbcType="BIGINT"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="addWay" column="add_way" jdbcType="INTEGER"/>
        <result property="addTime" column="add_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="delFlag" column="del_flag" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        owner_id,
        friend_id,
        remark,
        add_way,
        add_time,
        update_time,
        del_flag
    </sql>
    <insert id="insertOrUpdate">
        insert into friend
        (id,
         owner_id,
         friend_id,
         remark,
         add_way,
         add_time,
         update_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id},#{item.ownerId},#{item.friendId},#{item.remark},
            #{item.addWay},#{item.addTime},#{item.updateTime})
        </foreach>
        on duplicate key update
        remark = values(remark),
        add_way = values(add_way),
        add_time = values(add_time),
        update_time = values(update_time),
        del_flag = 0
    </insert>

    <select id="info" resultType="org.atomicoke.logic.modules.friend.domain.model.vo.FriendInfoVO">
        select f.owner_id,
               f.friend_id,
               u.nick_name as friendNickName,
               u.avatar    as friendAvatar,
               u.gender    as friendGender,
               u.mobile    as friendMobile,
               f.remark,
               f.add_way,
               f.add_time
        from friend f
                 left join user u on f.friend_id = u.id
        where f.owner_id = #{ownerId}
          and f.friend_id = #{friendId}
    </select>

    <select id="sync" resultType="org.atomicoke.logic.modules.friend.domain.model.vo.FriendInfoVO">
        select f.owner_id,
               f.friend_id,
               u.nick_name as friendNickName,
               u.avatar    as friendAvatar,
               u.gender    as friendGender,
               u.mobile    as friendMobile,
               f.remark,
               f.add_way,
               f.add_time
        from friend f
                 left join user u on f.friend_id = u.id
        where f.owner_id = #{userId}
        <if test="updateTime != null">
            and f.update_time >= #{updateTime}
        </if>
    </select>
</mapper>